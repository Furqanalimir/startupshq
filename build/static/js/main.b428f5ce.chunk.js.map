{"version":3,"sources":["context/Reducer.js","context/Context.js","apiCals.js","components/post.js","components/ListPost.js","components/comment.js","components/ListComment.js","App.js","index.js"],"names":["GlobalReducer","state","action","type","payload","loading","posts","comments","error","initialState","postId","isLoading","errors","Context","createContext","ContextProvider","children","useReducer","dispatch","Provider","value","getPosts","a","axios","get","data","getComments","id","Post","title","body","useContext","useEffect","className","to","ListPost","map","item","Comment","name","undefined","ListComment","comment","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b428f5ce.chunk.js","sourcesContent":["const GlobalReducer = (state, action) => {\n\n  const { type, payload } = action;\n  switch (type)\n  {\n    case 'GET_POSTS':\n      return {\n        ...state,\n        loading: false,\n        posts: payload\n      };\n    case 'GET_COMMENTS':\n      return {\n        ...state,\n        loading: false,\n        comments: payload\n      };\n    case 'ERROR':\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nexport default GlobalReducer;","import { createContext, useReducer } from 'react';\nimport GlobalReducer from './Reducer';\n\nconst initialState = {\n  posts: null,\n  postId: 1,\n  comments: null,\n  isLoading: false,\n  errors: null\n};\n\nexport const Context = createContext(initialState);\n\nexport const ContextProvider = ({ children }) => {\n  const [ state, dispatch ] = useReducer(GlobalReducer, initialState);\n\n  return (\n    <Context.Provider value={{\n      posts: state.posts,\n      comments: state.comments,\n      isLoading: state.isLoading,\n      errors: state.errors,\n      postId: state.postId,\n      dispatch\n    }}\n    >\n      {children}\n    </Context.Provider>\n  )\n}\n","import axios from 'axios'\n\nexport const getPosts = async (dispatch) => {\n  try\n  {\n    const { data } = await axios.get('https://jsonplaceholder.typicode.com/posts')\n    dispatch({\n      type: 'GET_POSTS',\n      payload: data\n    })\n  } catch (err)\n  {\n    dispatch({\n      type: 'ERROR',\n      payload: err\n    })\n  }\n}\n\nexport const getComments = async (id, dispatch) => {\n  try\n  {\n    const { data } = await axios.get(`https://jsonplaceholder.typicode.com/comments?postId=${id}`)\n    dispatch({\n      type: 'GET_COMMENTS',\n      payload: data\n    })\n  } catch (err)\n  {\n    dispatch({\n      type: 'ERROR',\n      payload: err\n    })\n  }\n}","import React, { useContext, useEffect } from 'react'\nimport { Context } from '../context/Context'\nimport { Link } from 'react-router-dom';\nimport { getComments } from '../apiCals'\n\nfunction Post({ id, title, body }) {\n  const { dispatch } = useContext(Context);\n\n  useEffect(() => {\n    getComments(id, dispatch)\n  }, [])\n\n  return (\n    <div className='post'>\n      <div className='post-body'>\n        <h1 className='title'>{title}</h1>\n        <p className='body'>{body}</p>\n      </div>\n      <div className='post-btn'>\n        <Link to='/comments' className='btn link'>Click here to see comments</Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Post;","import React, { Fragment, useEffect, useContext } from 'react'\nimport { Context } from '../context/Context';\nimport { getPosts } from '../apiCals';\nimport Post from './post';\n\nfunction ListPost() {\n\n  const { posts, dispatch } = useContext(Context);\n\n  useEffect(() => {\n    getPosts(dispatch)\n  }, [ dispatch ])\n\n  return (\n    <Fragment>\n      <h1 className=\"head\"> Posts </h1>\n      <div className=\"list\">\n        {\n          posts === null ? <h1 className='no-id'> Reload</h1> :\n            posts.map((item) => (<Post key={item.id}  {...item} />))\n        }\n      </div>\n    </Fragment>\n  )\n}\n\nexport default ListPost;","import React from 'react'\n\nconst Comment = ({ postId, name, body }) => {\n\n  return (\n    name === undefined ? '' :\n      <div className='comment'>\n        <h1 className='comment-name'>{name}</h1>\n        <p className='comment-body'>{body}</p>\n      </div>\n  )\n}\n\nexport default Comment;","import React, { Fragment, useContext } from 'react'\nimport { Context } from '../context/Context'\nimport Comment from './comment';\n\n\nconst ListComment = () => {\n  const { comments } = useContext(Context);\n\n  return (\n    <Fragment>\n      <h1 className='head'>Comments</h1>\n      <Comment />\n      <div className=\"list\">\n        {\n          comments === undefined || comments === null || comments === [] ? (\n            <h1 className=\"no-id\">\n              Select a post first\n            </h1>\n          ) : (comments.map(comment => <Comment key={comment.id}\n            {...comment}\n            name={comment.name}\n            body={comment.body}\n          />))\n        }\n      </div>\n    </Fragment>\n  )\n}\nexport default ListComment;","import './App.css';\nimport ListPost from './components/ListPost';\nimport ListComment from './components/ListComment';\nimport { ContextProvider } from './context/Context';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <ContextProvider>\n        <Router>\n          <Link to='/' className=\"link\"><h1 className=\"heading\">StartupsHQ</h1></Link>\n          <Switch>\n            <Route exact path='/'>\n              <ListPost />\n            </Route>\n            <Route path='/comments'>\n              <ListComment />\n            </Route>\n          </Switch>\n        </Router>\n      </ContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}